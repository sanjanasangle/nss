#include <stdio.h>
#include <math.h>

// Function to calculate modulo
int modulo(int base, int mod) {
    return base % mod;
}

int main() {
    // Parameters
    int g = 2;
    int p = 101;

    // Private keys
    int x = 3; // Alice's private key
    int y = 6; // Bob's private key

    // Calculate public values
    int R1 = modulo((int)pow(g, x), p); // Alice's public value
    int R2 = modulo((int)pow(g, y), p); // Bob's public value

    // Calculate shared secret
    int K_Alice = modulo((int)pow(R2, x), p);
    int K_Bob = modulo((int)pow(R1, y), p);
    int K_Final = K_Alice; // Both should be equal

    // Display results
    printf("Result:\n");
    printf("\nThe results are as follows:\n\n");
    printf("1) Alice chooses x=%d & calculates R1=%d\n", x, R1);
    printf("2) Bob chooses y=%d & calculates R2=%d\n", y, R2);
    printf("3) Alice sends the number %d to Bob\n", R1);
    printf("4) Bob sends the number %d to Alice\n", R2);
    printf("5) Alice calculates the symmetric key k=%d\n", K_Alice);
    printf("6) Bob calculates the symmetric key k=%d\n", K_Bob);
    printf("7) K_Final=%d\n", K_Final);

    return 0;
}
